@startuml
skinparam DefaultFontSize 16
skinparam monochrome true
skinparam ParticipantPadding 20


actor User
participant "UI\nRegistration" as UI
participant FirebaseAuth
participant "Authentication\nController" as AuthController
participant "Authentication\nService" as AuthService
participant "OTP\nService" as OTPService
database MySQL


' Main Flow
User -> UI: Nhấn "Đăng ký"
UI -> UI: Hiển thị form nhập họ tên
User -> UI: Nhập họ tên\nNhấn "Tiếp tục"
UI -> UI: Hiển thị màn chọn trường học
User -> UI: Chọn tỉnh thành, loại trường
UI -> AuthController: Gọi API lấy danh sách trường
AuthController -> AuthService: getEducationInstitutions()
AuthService -> MySQL: Truy vấn danh sách trường
MySQL --> AuthService: Danh sách trường
AuthService --> AuthController: Trả về danh sách
AuthController --> UI: Hiển thị danh sách
User -> UI: Chọn trường học\nNhấn "Tiếp tục"
UI -> UI: Hiển thị form ngày sinh
User -> UI: Nhập ngày sinh\nNhấn "Tiếp tục"
UI -> UI: Hiển thị form giới tính
User -> UI: Chọn giới tính\nNhấn "Tiếp tục"
UI -> UI: Hiển thị form email/số điện thoại
User -> UI: Nhập email/số điện thoại\nNhấn "Tiếp tục"
UI -> AuthController: Gọi API kiểm tra tồn tại
AuthController -> AuthService: kiểm tra email/số điện thoại
AuthService --> AuthController: Kết quả kiểm tra
alt Email/số điện thoại đã tồn tại
    AuthController --> UI: Thông báo đã tồn tại
    UI -> UI: Yêu cầu nhập lại
else Thông tin hợp lệ
    UI -> UI: Hiển thị form mật khẩu
    User -> UI: Nhập mật khẩu\nNhấn "Tiếp tục"
    UI -> UI: Kiểm tra đăng ký\nbằng email/số điện thoại
    alt Email
        UI -> AuthController: Gọi API gửi OTP bằng email
        AuthController -> OTPService: sendCodeToken()
    else
        UI -> FirebaseAuth: verifyPhoneNumber()
        FirebaseAuth -> UI: ID Token\n(JWT Firebase)
    end
    UI -> UI: Hiển thị form nhập OTP
    User -> UI: Nhập mã OTP\nNhấn "Xác nhận"


    alt Email
        UI -> AuthController: Gọi API đăng ký\n bằng email
        AuthController -> AuthService: register()
        AuthService -> OTPService: verifyOTP()
        OTPService --> AuthService: Xác minh OTP
        AuthService -> MySQL: Lưu thông tin user
        AuthService -> AuthService: Mã hóa mật khẩu
        AuthService --> AuthController: Thành công
        AuthController --> UI: Thông báo thành công
    else
        UI -> AuthController: gọi API đăng ký\n bằng số điện thoại
        AuthController -> AuthService: xác thực ID Token với Firebase
        AuthService -> MySQL: Lưu thông tin user
        AuthService -> AuthService: Mã hóa mật khẩu
        AuthService --> AuthController: Thành công
        AuthController --> UI: Thông báo thành công
    end
    UI -> UI: Chuyển đến màn hình đăng nhập
end


' Alternative Flows
group OTP không hợp lệ
    AuthService -> AuthService: Kiểm tra OTP sai
    AuthService --> AuthController: Thông báo lỗi
    AuthController --> UI: Yêu cầu nhập lại OTP
end


group Quá số lần gửi OTP
    OTPService -> OTPService: Kiểm tra số lần gửi
    OTPService --> AuthController: Thông báo vượt giới hạn
    AuthController --> UI: Hiển thị thông báo lỗi
end
@enduml